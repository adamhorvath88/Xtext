/*
 * generated by Xtext 2.24.0
 */
package org.example.entities.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.example.entities.entities.Model
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

import static org.junit.jupiter.api.Assertions.*

@ExtendWith(InjectionExtension)
@InjectWith(EntitiesInjectorProvider)
class EntitiesParsingTest {
	@Inject
	ParseHelper<Model> parseHelper

	@Test
	def attayWithDefaultSize() {
		val result = parseHelper.parse('''
			entity Person {
			}
			entity Company {
				Person[ ] employees;
			}
		''')
		assertNotNull(result)

		val errors = result.eResource.errors
		assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}

	@Test
	def arrayWithSize() {
		val result = parseHelper.parse('''
			entity Person {
			}
			entity Company {
				Person[42] employees;
			}
		''')
		assertNotNull(result)

		val errors = result.eResource.errors
		assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}

	@Test
	def basicTypesEntity() {
		val result = parseHelper.parse('''
			entity Account {
				int id;
				boolean verified;
				string username;
			}
		''')
		assertNotNull(result)

		val errors = result.eResource.errors
		assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}

	@Test
	def mixedTypesEntity() {
		val result = parseHelper.parse('''
			entity Account {
				int id;
				boolean verified;
				string username;
			}
			entity System {
				Account[] accounts;
				string name;
				boolean test;
			}
		''')
		assertNotNull(result)

		val errors = result.eResource.errors
		assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}
